name: ðŸš€ CI/CD Pandora Backend

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.2.0
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ vars.POSTGRES_DB }}
          DATABASE_HOST: ${{ vars.DATABASE_HOST }}
          DATABASE_PORT: ${{ vars.DATABASE_PORT }}
          REDIS_HOST: ${{ vars.REDIS_HOST }}
          REDIS_PORT: ${{ vars.REDIS_PORT }}
          DEBUG: ${{ vars.DEBUG }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          ALLOWED_HOSTS: ${{ vars.ALLOWED_HOSTS }}
        with:
          envs: POSTGRES_USER,POSTGRES_PASSWORD,POSTGRES_DB,DATABASE_HOST,DATABASE_PORT,REDIS_HOST,REDIS_PORT,DEBUG,SECRET_KEY,ALLOWED_HOSTS
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            set -e
            cd /home/ubuntu/pandora-backend

            echo "â†’ Atualizando cÃ³digo"
            git fetch origin main
            git reset --hard origin/main

            echo "â†’ Gerando .env temporÃ¡rio"
            cat <<EOF > .env
            POSTGRES_USER=$POSTGRES_USER
            POSTGRES_PASSWORD=$POSTGRES_PASSWORD
            POSTGRES_DB=$POSTGRES_DB
            DATABASE_HOST=$DATABASE_HOST
            DATABASE_PORT=$DATABASE_PORT
            REDIS_HOST=$REDIS_HOST
            REDIS_PORT=$REDIS_PORT
            DEBUG=$DEBUG
            SECRET_KEY=$SECRET_KEY
            ALLOWED_HOSTS=$ALLOWED_HOSTS
            EOF

            echo "â†’ Buildando imagem no servidor"
            docker compose --env-file .env -f docker-compose.prod.yml build

            echo "â†’ Subindo containers"
            docker compose --env-file .env -f docker-compose.prod.yml up -d

            echo "âœ… Deploy concluÃ­do!"
